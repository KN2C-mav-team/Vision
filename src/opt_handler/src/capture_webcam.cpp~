#include "capture_webcam.h"



capture_webcam::capture_webcam(QObject *parent) : QObject(parent)
{

    //    cap.open(_DEV_VIDEO);
    //    if( cap.isOpened() )
    //    {

    //        cap.set(CV_CAP_PROP_FPS, _VIDEO_FPS);
    //        cap.set(CV_CAP_PROP_FRAME_WIDTH, _FRAME_WIDTH);
    //        cap.set(CV_CAP_PROP_FRAME_HEIGHT, _FRAME_HEIGTH);
    //        cap >> frame;

    //        start_time = 0;
    //        main_timer = new QTimer(this);
    //        connect(main_timer,SIGNAL(timeout()),this,SLOT(timerEvent()));


    //        main_timer->start(2);
    //    }
    //    else
    //    {
    //        qDebug() << "Couldn't open the camera, exit.";
    //        exit(0);
    //    }
    //}
}

void capture_webcam::imageEvent(const sensor_msgs::ImageConstPtr &msg)
{

    try
    {
        frame=cv_bridge::toCvShare(msg, "bgr8")->image;



    }
    catch (cv_bridge::Exception& e)
    {
        ROS_ERROR("Could not convert from '%s' to 'bgr8'.", msg->encoding.c_str());
    }
  //  qDebug()<<"tick !";
  //  farme_status = 1;
//imshow("frame",frame);
waitKey(2);
    emit(imageReady(frame));
}

capture_webcam::~capture_webcam()
{
    delete main_timer;
}

int capture_webcam::get_frame_status()
{
    return farme_status;
}

double capture_webcam::get_Diff_Time()
{
    return Diff_Time;
}

void capture_webcam::set_frame_status(int status)
{
    farme_status = status;
}

